#Реализуйте алгоритм игры “Тайный Санта (Secret Santa)” - в шляпу кладутся небольшие записки с именами участников.
# Затем каждый играющий по очереди вытягивает бумажку с именем того, кому предстоит вручить презент.
# Ваша программа должна используя список имен участников выдать на выходе пары, кто и кому будет дарить,
# причем сам себе человек не может подарить, дубликаты тоже не допустимы.
import random
#модуль random, который предоставляет функции для работы с генерацией случайных чисел и операций, таких как перемешивание.


def secret_santa(participants):
    # Объявляет функцию secret_santa, которая принимает список участников игры.
    # Реализует распределение подарков для игры 'Тайный Санта'.
    # :param participants: list - список имен участников.
    # :return: dict - пары "кто -> кому".


    if len(participants) < 2:
        raise ValueError("Участников должно быть не менее двух.")
#Проверяет, что количество участников в списке participants больше или равно 2
 #Если участников меньше двух, выбрасывает исключение ValueError с сообщением.


    givers = participants[:]  # Копируем список дарящих
    receivers = participants[:]  # Копируем список получателей
    #participants — это исходный список участников, который передается в функцию secret_santa
    #cрез [:] — это синтаксис для создания копии списка:
#participants[:] создает новый список, который полностью идентичен списку participants, но является независимым от него.
#Это означает, что изменения в одном списке (например, перемешивание или изменение элементов) не будут влиять на другой

    random.shuffle(receivers)  # Перемешиваем список получателей


    while any(giver == receiver for giver, receiver in zip(givers, receivers)):
        random.shuffle(receivers)
        # Перемешиваем до тех пор, пока не получится валидное распределение

#zip(givers, receivers):
#Создаёт пары дарящих и получателей, сопоставляя элементы двух списков.

##giver == receiver:
#Проверяет, не совпадают ли дарящий и получатель (чтобы избежать самоподарков).

#any(...):
#Возвращает True, если хотя бы одна пара нарушает правило (самоподарок).

#random.shuffle(receivers):
#Если хотя бы одно совпадение найдено, список receivers перемешивается заново
    # .
#Для чего нужно: Этот цикл гарантирует, что распределение будет корректным: никто не дарит себе подарок.



    pairs = {giver: receiver for giver, receiver in zip(givers, receivers)}
    return pairs

   #1   zip(givers, receivers)
#zip() — это встроенная функция Python, которая принимает несколько итерируемых объектов (например, списков)
# и объединяет их в кортежи.

#Что делает zip(givers, receivers)?
#Функция zip(givers, receivers) берёт два списка — givers (дарящих) и receivers (получателей) — и создаёт из них пары.
#Каждая пара состоит из одного элемента из givers и одного из receivers, и пары этих элементов "сопоставляются" по индексам.
#Это аналогично тому, как можно сжать два списка, чтобы их элементы шли "парами".

#2   {giver: receiver for giver, receiver in zip(givers, receivers)}
#Это генератор словаря, который создаёт словарь, где:

# Ключом является giver (дарящий),
# Значением — receiver (получатель).
# Как это работает:
#
# Для каждой пары, полученной из zip(givers, receivers), создаётся запись в словаре.
# В этой записи:
# giver становится ключом,
# receiver — значением.
#Таким образом, словарь pairs будет содержать, кто кому дарит подарок.

     #3  return pairs
#После того как мы создали и заполнили словарь pairs, возвращаем его из функции с помощью return pairs.
#Это означает, что функция secret_santa вернёт словарь с парами дарящих и получателей.

#zip(givers, receivers): Создаёт последовательность пар (кортежей), где каждый кортеж состоит из одного дарящего и одного получателя.
# Генератор словаря pairs: Создаёт словарь, где ключ — это дарящий (giver), а значение — получатель (receiver).
# return pairs: Возвращает результат — словарь с парами дарящих и получателей.



for giver, receiver in pairs.items():
    print(f"{giver} -> {receiver}")
# Вывод результатов
#Что делает цикл for : Перебирает пары из словаря pairs.
# giver — дарящий.
# receiver — получатель.